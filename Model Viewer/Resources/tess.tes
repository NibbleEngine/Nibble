#version 400 core
//-- TessEval

layout(triangles, equal_spacing, cw) in;
in vec4 tcPosition[];
in vec4 tcNormal[];
in vec2 tcUVPosition[];
out vec4 tePosition;
out vec3 tePatchDistance;

layout(location=7) uniform mat4 mvp;
layout(location=8) uniform mat4 nMat;
layout(location=9) uniform mat4 rotMat;
layout(location=10) uniform mat4 worldMat;


//Outputs to fragment Shader
out vec2 teUV;

void main()
{
	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;
	float t = gl_TessCoord.z;

    tePosition = vec4(u * tcPosition[0].xyz + v * tcPosition[1].xyz + t * tcPosition[2].xyz, 1.0);
	teUV = u * tcUVPosition[0] + v * tcUVPosition[1] + t * tcUVPosition[2];

	tePatchDistance = gl_TessCoord;
    gl_Position = mvp * tePosition;

}
